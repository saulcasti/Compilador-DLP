#source "prueba.txt"
call main
halt
#TYPE Pareja:{
	entero:int
	caracter:char
}
#GLOBAL pareja:Pareja
#TYPE Empleado:{
	edad:int
}
#TYPE Empresa:{
	empleados:2 * Empleado
}
#GLOBAL acme:2 * Empresa
#GLOBAL fibonacci:8 * 3 * int
#FUNC p
#RET VOID
p:
enter 0
ret 0,0,0
#FUNC f
#PARAM paramReal:float
#PARAM paramInt:int
#RET int
#LOCAL localReal:float
#LOCAL digito:char
#LOCAL resultado:int
f:
enter 7
#line 30
pusha BP
push 4
add
pusha BP
push 0
add
loadf
pushf 10.0
mulf
storef
#line 31
pusha BP
push 5
add
pushb '0'
storeb
pusha BP
push 0
add
loadi
push 256
lti
jz else1
#line 33
pusha BP
push 5
add
pusha BP
push 0
add
loadi
i2b
storeb
#line 34
pusha BP
push 7
add
pusha BP
push 5
add
loadb
b2i
storei
jmp finIf1
else1:
#line 37
pusha BP
push 7
add
pusha BP
push 4
add
loadf
f2i
storei
finIf1:
#line 39
ret 2,7,6
#FUNC inicializa
#RET VOID
#LOCAL i:int
inicializa:
enter 2
#line 46
pusha 11
push 0
push 6
mul
add
push 0
push 2
mul
add
push 0
storei
#line 47
pusha 11
push 0
push 6
mul
add
push 1
push 2
mul
add
push 1
storei
#line 48
pusha 11
push 0
push 6
mul
add
push 2
push 2
mul
add
push 1
storei
#line 49
pusha BP
push 2
add
push 1
storei
while1:
pusha BP
push 2
add
loadi
push 8
lti
jz finWhile1
#line 51
pusha 11
pusha BP
push 2
add
loadi
push 6
mul
add
push 0
push 2
mul
add
pusha 11
pusha BP
push 2
add
loadi
push 1
subi
push 6
mul
add
push 1
push 2
mul
add
loadi
storei
#line 52
pusha 11
pusha BP
push 2
add
loadi
push 6
mul
add
push 1
push 2
mul
add
pusha 11
pusha BP
push 2
add
loadi
push 1
subi
push 6
mul
add
push 2
push 2
mul
add
loadi
storei
#line 53
pusha 11
pusha BP
push 2
add
loadi
push 6
mul
add
push 2
push 2
mul
add
pusha 11
pusha BP
push 2
add
loadi
push 6
mul
add
push 0
push 2
mul
add
loadi
pusha 11
pusha BP
push 2
add
loadi
push 6
mul
add
push 1
push 2
mul
add
loadi
addi
storei
#line 54
pusha BP
push 2
add
pusha BP
push 2
add
loadi
push 1
addi
storei
jmp while1
finWhile1:
ret 0,2,0
#FUNC main
#RET VOID
#LOCAL i:int
#LOCAL j:int
main:
enter 4
#line 64
call p
pop
#line 66
pusha BP
push 2
add
push 0
storei
#line 67
pusha 0
push 2
add
pushb '0'
storeb
#line 68
pusha 0
push 0
add
pushb '0'
b2i
storei
#line 70
call f
outi
#line 71
pushb '\n'
outb
#line 72
call f
pop
#line 74
call inicializa
pop
#line 75
pusha BP
push 2
add
push 0
storei
while2:
pusha BP
push 2
add
loadi
push 8
lti
jz finWhile2
#line 77
pushb '('
outb
#line 78
pusha BP
push 2
add
loadi
push 1
addi
outi
#line 79
pushb ')'
outb
#line 80
pushb ' '
outb
#line 81
pusha 11
pusha BP
push 2
add
loadi
push 6
mul
add
push 0
push 2
mul
add
loadi
outi
#line 82
pushb '+'
outb
#line 83
pusha 11
pusha BP
push 2
add
loadi
push 6
mul
add
push 1
push 2
mul
add
loadi
outi
#line 84
pushb '='
outb
#line 85
pusha 11
pusha BP
push 2
add
loadi
push 6
mul
add
push 2
push 2
mul
add
loadi
outi
#line 86
pushb '\n'
outb
#line 87
pusha BP
push 2
add
pusha BP
push 2
add
loadi
push 1
addi
storei
jmp while2
finWhile2:
#line 90
pusha 3
push 1
push 4
mul
add
push 0
add
push 1
push 2
mul
add
push 0
add
push 56
storei
#line 91
pusha 3
push 1
push 4
mul
add
push 0
add
push 1
push 2
mul
add
push 0
add
loadi
outi
#line 92
pushb '\n'
outb
#line 94
pusha BP
push 2
add
push 0
storei
while3:
pusha BP
push 2
add
loadi
push 2
lti
jz finWhile3
#line 96
pusha BP
push 4
add
push 0
storei
while4:
pusha BP
push 4
add
loadi
push 2
lti
jz finWhile4
#line 98
pusha 3
pusha BP
push 2
add
loadi
push 4
mul
add
push 0
add
pusha BP
push 4
add
loadi
push 2
mul
add
push 0
add
pusha BP
push 2
add
loadi
pusha BP
push 4
add
loadi
addi
storei
#line 99
pusha BP
push 4
add
pusha BP
push 4
add
loadi
push 1
addi
storei
jmp while4
finWhile4:
#line 101
pusha BP
push 2
add
pusha BP
push 2
add
loadi
push 1
addi
storei
jmp while4
finWhile4:
#line 105
pusha BP
push 2
add
push 0
storei
while5:
pusha BP
push 2
add
loadi
push 2
lti
jz finWhile5
#line 107
pusha BP
push 4
add
push 0
storei
while6:
pusha BP
push 4
add
loadi
push 2
lti
jz finWhile6
#line 109
pusha 3
pusha BP
push 2
add
loadi
push 4
mul
add
push 0
add
pusha BP
push 4
add
loadi
push 2
mul
add
push 0
add
loadi
outi
#line 110
pushb ' '
outb
#line 111
pusha BP
push 4
add
pusha BP
push 4
add
loadi
push 1
addi
storei
jmp while6
finWhile6:
#line 113
pusha BP
push 2
add
pusha BP
push 2
add
loadi
push 1
addi
storei
jmp while6
finWhile6:
ret 0,4,0
